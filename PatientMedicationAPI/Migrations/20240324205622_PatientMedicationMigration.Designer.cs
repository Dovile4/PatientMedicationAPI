// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PatientMedicationAPI.Data;

#nullable disable

namespace PatientMedicationAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240324205622_PatientMedicationMigration")]
    partial class PatientMedicationMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PatientMedicationAPI.Models.Clinician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegistrationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clinicians");
                });

            modelBuilder.Entity("PatientMedicationAPI.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodeSystem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StrengthUnit")
                        .HasColumnType("integer");

                    b.Property<int>("StrengthValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("PatientMedicationAPI.Models.MedicationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClinicianId")
                        .HasColumnType("integer");

                    b.Property<int>("ClinicianReference")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer");

                    b.Property<int>("MedicationId")
                        .HasColumnType("integer");

                    b.Property<int>("MedicationReference")
                        .HasColumnType("integer");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<int>("PatientReference")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PrescribedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClinicianId");

                    b.HasIndex("MedicationId");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicationRequests");
                });

            modelBuilder.Entity("PatientMedicationAPI.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientMedicationAPI.Models.MedicationRequest", b =>
                {
                    b.HasOne("PatientMedicationAPI.Models.Clinician", "Clinician")
                        .WithMany("MedicationRequests")
                        .HasForeignKey("ClinicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientMedicationAPI.Models.Medication", "Medication")
                        .WithMany("MedicationRequests")
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientMedicationAPI.Models.Patient", "Patient")
                        .WithMany("MedicationRequests")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinician");

                    b.Navigation("Medication");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PatientMedicationAPI.Models.Clinician", b =>
                {
                    b.Navigation("MedicationRequests");
                });

            modelBuilder.Entity("PatientMedicationAPI.Models.Medication", b =>
                {
                    b.Navigation("MedicationRequests");
                });

            modelBuilder.Entity("PatientMedicationAPI.Models.Patient", b =>
                {
                    b.Navigation("MedicationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
